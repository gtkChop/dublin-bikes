[{"/Users/swaroop/Documents/reactApps/dublin-bikes/src/index.js":"1","/Users/swaroop/Documents/reactApps/dublin-bikes/src/BikesApp.js":"2","/Users/swaroop/Documents/reactApps/dublin-bikes/src/reportWebVitals.js":"3","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/BikesDashboard.js":"4","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/utils.js":"5","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/Context.js":"6","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Workspace.js":"7","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceIcon.js":"8","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceBrand.js":"9","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/BikeStations.js":"10","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/SearchInput.js":"11","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsTable.js":"12","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/Pagination.js":"13","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsRows.js":"14","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Filters.js":"15","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikesAvailability.js":"16","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikeStatus.js":"17","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/FiltersModel.js":"18","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/HistoricalDataGraph.js":"19","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/About/About.js":"20","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/ResetMapView.js":"21"},{"size":516,"mtime":1612215539220,"results":"22","hashOfConfig":"23"},{"size":693,"mtime":1612223329897,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":4535,"mtime":1612734419602,"results":"26","hashOfConfig":"23"},{"size":4316,"mtime":1612719358097,"results":"27","hashOfConfig":"23"},{"size":162,"mtime":1612464575011,"results":"28","hashOfConfig":"23"},{"size":2076,"mtime":1612716220102,"results":"29","hashOfConfig":"23"},{"size":628,"mtime":1612730450520,"results":"30","hashOfConfig":"23"},{"size":728,"mtime":1612296848973,"results":"31","hashOfConfig":"23"},{"size":882,"mtime":1612465356556,"results":"32","hashOfConfig":"23"},{"size":955,"mtime":1612387246442,"results":"33","hashOfConfig":"23"},{"size":6297,"mtime":1612465395887,"results":"34","hashOfConfig":"23"},{"size":1709,"mtime":1612382232596,"results":"35","hashOfConfig":"23"},{"size":1268,"mtime":1612465866684,"results":"36","hashOfConfig":"23"},{"size":5678,"mtime":1612722095745,"results":"37","hashOfConfig":"23"},{"size":3474,"mtime":1612729559133,"results":"38","hashOfConfig":"23"},{"size":2163,"mtime":1612705671281,"results":"39","hashOfConfig":"23"},{"size":2918,"mtime":1612722359558,"results":"40","hashOfConfig":"23"},{"size":2366,"mtime":1612729647480,"results":"41","hashOfConfig":"23"},{"size":3871,"mtime":1612733893019,"results":"42","hashOfConfig":"23"},{"size":309,"mtime":1612734445803,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"xtl2tk",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/swaroop/Documents/reactApps/dublin-bikes/src/index.js",[],["91","92"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/BikesApp.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/reportWebVitals.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/BikesDashboard.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/utils.js",["93","94","95","96","97","98"],"import mapboxgl from 'mapbox-gl';\n\nfunction uuidv4() {\n    /* \n        Generates uuid4\n    */\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n}\n\nfunction FuzzyMatch (val, s) {\n    /* \n        Match fuzzy returns boolean\n    */\n    var hay = val.toLowerCase(), i = 0, n = -1, l;\n    s = s.toLowerCase();\n    for (; l = s[i++] ;) if (!~(n = hay.indexOf(l, n + 1))) return false;\n    return true\n}\n\nfunction TitleCase(value) {\n    /* \n        Convert string to title\n    */    \n    return value.toString().toLowerCase().replace(/\\b(\\w)/g, s => s.toUpperCase());\n}\n\nfunction ConfigLoader(config){\n    /* \n        Config loader checks required property\n    */\n    const requiredKeys = [\n        \"map\",\n        \"weatherAPI\",\n        \"bikesAPI\",\n        \"appConfig\"\n    ]\n    if (!Object.keys(config).length) {\n        throw new Error(\"Configuration parsing error. No config given\")\n    }\n    requiredKeys.map(configKey => {\n        if (!config.hasOwnProperty(configKey)){\n            throw new Error(`Config doesnt contain: ${configKey}`)\n        }\n        return null\n    })\n\n    return {...config}\n\n}\n\nfunction addLayers(layers, map){\n    // Add all layers\n    for (var i=0; i<layers.length; i++){\n        map.addLayer(layers[i])\n    }\n}\n\nfunction clusterClickEvent(map) {\n    // Click on cluster\n    map.on('click', 'stations', function (e) {\n        var features = map.queryRenderedFeatures(e.point, {\n        layers: ['stations']\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource('stations').getClusterExpansionZoom(\n            clusterId,\n            function (err, zoom) {\n                if (err) return;\n                if (!zoom) return;\n                \n                map.easeTo({\n                    center: features[0].geometry.coordinates,\n                    zoom: zoom\n                });\n            }\n        );\n    });\n}\n\nfunction unClusteredClickEvent(map, clickEventHandler) {\n    map.on('click', 'unclustered-point', function (e) { \n        var properties = e.features[0].properties\n        clickEventHandler(properties)\n    })\n}\n\nfunction addMapDataControlsEvents(geojsonData, map, config, clickEventHandler) {\n    // Add map controls\n    map.on('load', function(){\n        map.addSource('stations', {\n            type: \"geojson\",\n            data: geojsonData,\n            cluster: true,\n            clusterMaxZoom: 14, // Max zoom to cluster points on\n            clusterRadius: 50 \n        });\n        map.scrollZoom.disable();\n        addLayers(config.map.layers, map)\n        clusterClickEvent(map)\n        unClusteredClickEvent(map, clickEventHandler)\n        map.on('mouseenter', 'clusters', function () {\n            map.getCanvas().style.cursor = 'pointer';\n        });\n        map.on('mouseleave', 'clusters', function () {\n            map.getCanvas().style.cursor = '';\n        });\n        \n    })\n    map.addControl(new mapboxgl.NavigationControl(), 'top-left');\n}\n\nfunction convertDateToString(d){\n\n    return d.getFullYear()+(\"0\"+(d.getMonth()+1)).slice(-2)+\n        (\"0\" + d.getDate()).slice(-2)+(\"0\" + d.getHours()).slice(-2)+\n        (\"0\" + d.getMinutes()).slice(-2);\n}\n\nfunction getCurrentDateDiffHours(subhours=0) {\n    var currentDate = new Date()\n    var diffDate = new Date()\n    diffDate.setHours(diffDate.getHours() - subhours)\n    return {\n        currentDate: convertDateToString(currentDate),\n        diffDate: convertDateToString(diffDate)\n    }\n}\n\nfunction getDifferenceBetweenDates(date1, date2, inHours=false) {\n    var date1 = new Date(date1);\n    var date2 = new Date(date2);\n    const diffTime = date2 - date1;\n    if (inHours) {\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60)); \n        return diffDays\n    }\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n    return diffDays\n}\n\nfunction getShortDateTime(val) {\n    const date = new Date(val)\n    const cleanVal = `${date.getDay()} @ ${date.getHours()} hr ${date.getMinutes()} mins`\n    return cleanVal\n}\n\nexport {\n    uuidv4,\n    FuzzyMatch,\n    TitleCase,\n    ConfigLoader,\n    addMapDataControlsEvents,\n    getCurrentDateDiffHours,\n    getDifferenceBetweenDates,\n    getShortDateTime\n}\n","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/Context.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Workspace.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceIcon.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceBrand.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/BikeStations.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/SearchInput.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsTable.js",["99","100"],"import React, {Component} from 'react'\nimport Pagination from './Pagination'\nimport SearchInput from '../../BikeModel/WorkSpace/SearchInput'\nimport {FuzzyMatch} from '../utils'\nimport StationsRows from './StationsRows'\n\n\nclass StationsTable extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rowIdentifier: props.rowIdentifier || \"id\",\n            data: props.data || [],\n            itemsPerPage: props.itemsPerPage || 5,\n            columns: props.columns || [],\n            selectedData: [],\n            noOfPages: null,\n            searchFields: [\"st_NAME\"],\n            currentPage: props.currentPage || 1,\n            searchValue: props.searchValue || '',\n            _searchedRecords: props.data || []\n        }\n    }\n\n    getCurrentDataGivenPageNumber(pageNo, data=null) {\n        /*\n            Min page = 1\n            Max page = noOfPages\n        */\n        if (data == null) {\n            return this.state._searchedRecords.slice((pageNo-1)*this.state.itemsPerPage, pageNo*this.state.itemsPerPage)\n        } else {\n            return data.slice((pageNo-1)*this.state.itemsPerPage, pageNo*this.state.itemsPerPage)\n        }\n    }\n\n    search(searchValue) {\n        searchValue = searchValue.trim()\n        if (searchValue.length == 0){\n            return this.state.data\n        }\n        const data = []\n        this.state.data.map(item => {\n            let isMatch = () => {\n                for (let idx=0; idx < this.state.searchFields.length; idx++) {\n                    if (FuzzyMatch(item[this.state.searchFields[idx]], searchValue)) {\n                        return true\n                    }\n                }\n                return false\n            }\n            if (isMatch()) {\n                data.push(item)\n            }\n            return null\n        })\n\n        return data\n    }\n\n    setPaginationResults(val, reset=false) {\n        if (!reset) {\n            this.setState(prevState => {\n                return {\n                    currentPage: prevState.currentPage + val, \n                    selectedData: this.getCurrentDataGivenPageNumber(prevState.currentPage + val)\n                }\n            })\n        } else {\n            this.setState(prevState => {\n                return {\n                    currentPage: val, \n                    selectedData: this.getCurrentDataGivenPageNumber(val)\n                }\n            })\n        }\n    }\n\n    calculateNumberOfPages(totalRecordsCnt) {\n\n        var noOfPages = 1\n        if (totalRecordsCnt <= this.state.itemsPerPage) {\n            noOfPages = 1\n        } else {\n            const minPages = Math.floor(totalRecordsCnt/this.state.itemsPerPage)\n            noOfPages = (totalRecordsCnt/this.state.itemsPerPage) > minPages ? minPages+1 : minPages\n        }\n        return noOfPages\n    }\n\n    componentDidMount() {\n        /*\n        Populate the sate from props\n        */\n        if ((!this.state.data.length) || (this.state.columns == 0)){\n            throw new Error(\"Tbale is initialised without data or column information\")\n        }\n\n        this.setState(prevState => {\n            var _searchedRecords = this.search(prevState.searchValue)\n            var noOfPages = this.calculateNumberOfPages(_searchedRecords.length)\n            return {\n                selectedData: this.getCurrentDataGivenPageNumber(prevState.currentPage, _searchedRecords),\n                _searchedRecords: _searchedRecords,\n                noOfPages: noOfPages\n            }\n        })\n\n\n    }\n\n    searchHandler = (e) => {\n        const searchValue = e.target.value\n        const _searchedRecords = this.search(searchValue)\n        const noOfPages = this.calculateNumberOfPages(_searchedRecords.length)\n        this.setState(prevState => {\n            return {\n                searchValue: searchValue,\n                selectedData: this.getCurrentDataGivenPageNumber(1, _searchedRecords),\n                _searchedRecords: _searchedRecords,\n                currentPage: 1,\n                noOfPages: noOfPages\n            }\n        })\n    }\n\n    paginationHandler = (action) => {\n        switch(action) {\n            case 'next': {\n                if ((this.state.currentPage+1) > this.state.noOfPages){ break } else { this.setPaginationResults(+1) }\n                break\n            }\n            case 'previous': {\n                if ((this.state.currentPage-1) < 1) { break } else { this.setPaginationResults(-1) }\n                break\n            }\n            case 'first': {\n                this.setPaginationResults(1, true)\n                break\n            }\n            case 'last': {\n                this.setPaginationResults(this.state.noOfPages, true)\n                break\n            }\n            default: {\n                break\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <SearchInput searchHandler={this.searchHandler} searchValue={this.state.searchValue}/>\n                <div className=\"bikes__component\">\n                    <table className=\"table table-striped table-sm table-condensed stations__table\">\n                        <thead>\n                            <tr>\n                                {\n                                    this.state.columns.map(column => {\n                                        return <th key={column.id}>{column.label}</th>\n                                    })\n                                }\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <StationsRows \n                                selectedData={this.state.selectedData} \n                                rowIdentifier={this.state.rowIdentifier} \n                                columns={this.state.columns}\n                                locationInMapEvent={this.props.locationInMapEvent}\n                            />\n                        </tbody>\n                    </table>\n                    <Pagination \n                        currentPage={this.state.currentPage} \n                        noOfPages={this.state.noOfPages} \n                        paginationHandler={this.paginationHandler}\n                    />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default StationsTable","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/Pagination.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsRows.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Filters.js",["101"],"import React, {useEffect, useState} from 'react'\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/fontawesome-free-solid'\nimport {getDifferenceBetweenDates} from '../../BikeModel/utils'\n\nfunction Filters(props) {\n    const [stations, setStations] = useState([])\n    const [FromDate, setFromDate] = useState({\"date\": \"\", \"time\": \"00:00\"})\n    const [ToDate, setToDate] = useState({\"date\": \"\", \"time\": \"00:00\"})\n    const [errorMsg, setErrorMsg] = useState(\"\")\n    const [selectedOption, setSelectedOption] = useState(null)\n\n    const closeErrorMessageHandler = () => {\n        setErrorMsg(\"\")\n    }\n\n    useEffect(() => {\n        var options = []\n        props.allStations.map(station => {\n            options.push({\n                value: station.st_ID,\n                label: station.st_NAME,\n                data: station\n            })\n            return null\n        })\n        setStations(options)\n    }, [])  \n      \n    const handleSelectedStation = selectedOption => {\n        setSelectedOption(selectedOption)\n      }\n    \n    const handleFromDate = (e, type) => {\n        setFromDate(prevFromDate => {\n            var newState = {...prevFromDate}\n            newState[type] = e.target.value\n            return newState\n        })\n    }\n\n    const handleToDate = (e, type) => {\n        setToDate(prevToDate => {\n            var newState = {...prevToDate}\n            newState[type] = e.target.value\n            return newState\n        })\n    }\n    \n    const formSubmitHandler = (e) => {\n        e.preventDefault()\n\n        if (selectedOption === null){\n            setErrorMsg(\"Please select a station.\")\n            return null\n        }\n        if ((selectedOption === null) || (!Object.keys(selectedOption) > 0)) {\n            setErrorMsg(\"Please select a station.\")\n            return null\n        }\n        if (!FromDate.date) {\n            setErrorMsg(\"Please select a form date.\")\n            return null\n        }\n        if (!ToDate.date) {\n            setErrorMsg(\"Please select a to date.\")\n            return null\n        }\n\n        if (getDifferenceBetweenDates(FromDate.date, ToDate.date) < 0) {\n            setErrorMsg(\"From date cannot be graeater that to date.\")\n            return null\n        }\n\n        props.handleHistoricalFormData({\n            from: `${FromDate.date.replaceAll(\"-\", '')}${FromDate.time.replaceAll(\":\", \"\")}`,\n            to: `${ToDate.date.replaceAll(\"-\", '')}${ToDate.time.replaceAll(\":\", \"\")}`,\n            station: selectedOption\n        })\n    }\n      \n    return (\n        <>\n        <h4 style={{textAlign: \"center\", marginBottom: \"0px\", marginTop: \"10px\"}}>Historical Data</h4>\n        <hr></hr>\n        <div className=\"bike__stations bikes__component\">\n            <div className=\"bikes__component\">\n                <div className=\"bikes__historical_filter\">\n                    <p style={{marginBottom: \"0\"}}>Select the station and dates to view the historical data. \n                    Please note only a max period of 3 days can be selected</p>\n                    <form>\n                        {\n                            errorMsg?\n                            <div className=\"alert alert-danger\" role=\"alert\" style={{padding: \"2px\", fontSize: \"15px\", textAlign: \"center\"}}>\n                                {errorMsg}\n                                <button \n                                    className=\"btn btn-link\" \n                                    style={{padding: \"0\", float: \"right\", color: \"#721c24\", paddingRight: \"10px\"}}\n                                    onClick={() => closeErrorMessageHandler()}>\n                                    <FontAwesomeIcon icon={faTimes} size=\"sm\"/>\n                                </button>\n                            </div>\n                            : null\n                        }\n                        \n                        <div style={{marginTop: \"15px\"}}>\n                            <label>* Station: </label>\n                            <Select\n                                value={selectedOption}\n                                onChange={handleSelectedStation}\n                                options={stations}\n                                className=\"bikes_station_select\"\n                                classNamePrefix=\"bikes_station_select\"\n                                placeholder=\"Select Station\"\n                            />\n                        </div>\n                        <div style={{marginTop: \"10px\"}}>\n                            <label>* From: </label>\n                            <input type=\"time\" value={FromDate.time} onChange={(e) => handleFromDate(e, \"time\")}></input>\n                            <input type=\"date\" value={FromDate.date} onChange={(e) => handleFromDate(e, \"date\")}></input>\n                        </div>\n                        <div style={{marginTop: \"10px\"}}>\n                            <label>* To: </label>\n                            <input type=\"time\" value={ToDate.time} onChange={(e) => handleToDate(e, \"time\")}></input>\n                            <input type=\"date\" value={ToDate.date} onChange={(e) => handleToDate(e, \"date\")}></input>\n                        </div>\n                        <div style={{marginTop: \"25px\", textAlign: \"right\"}}>\n                            <button className=\"btn bikes__button\" type=\"submit\" onClick={formSubmitHandler}>\n                                Show Data\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Filters","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikesAvailability.js",["102"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikeStatus.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/FiltersModel.js",["103"],"import React, {useEffect, useState} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/fontawesome-free-solid'\nimport HistoricalDataGraph from './HistoricalDataGraph'\n\n\nfunction FiltersModel(props) {\n\n    const [historicalData, setHistoricalData] = useState({\"historic\": [], \"errors\": \"\"})\n    const [close, setClose] = useState(false)\n    \n    useEffect(() => {\n        const endPoint = props.config.bikesAPI.dublinBikes.historicalUrl\n        const url = `${endPoint}/?dfrom=${props.formData.from}&dto=${props.formData.to}&station=${props.formData.station.data.st_ID}`\n        fetch(url, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n                \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            setClose(false)\n            if ((data.length > 0) && (data[0].historic.length > 0)) {\n                setHistoricalData({\"historic\": data[0].historic, \"errors\": \"\"})\n            } else {\n                setHistoricalData({\"historic\": [], \"errors\": \"Error while fetching historical data\"})\n            }\n        })\n        .catch((error) => {\n            console.warn(error)\n            setClose(false)\n            setHistoricalData({\"historic\": [], \"errors\": \"Error while fetching historical data\"})\n        })\n        \n    }, [props.formData.from, props.formData.to, props.formData.station.data.st_ID])\n\n    if (!close) {\n        return (\n            <div className=\"bikes__historical_data bikes__widget_component\">\n                <div style={{position: \"absolute\", right: \"5px\", top: \"1px\"}}>\n                    <button \n                        className=\"btn btn-link bikes__link_for_darkcomponent\" \n                        style={{padding: \"0\", margin: \"0\", width: \"30px\"}}\n                        onClick={() => setClose(true)}\n                    >\n                        <FontAwesomeIcon icon={faTimes} size=\"sm\"/>\n                    </button>\n                </div>\n                <div className=\"bikes__widget_header\">\n                    <h5>\n                        Historical Data\n                    </h5>\n                    <h6>\n                        {props.formData.station.data.st_NAME}\n                    </h6>\n                    <small>\n                    Station ID:  {props.formData.station.data.st_ID}\n                    </small>\n                </div>\n                <hr></hr>\n                <HistoricalDataGraph data={historicalData} />\n                \n            </div>\n        )\n     } \n    return null\n}\n\nexport default FiltersModel","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/HistoricalDataGraph.js",["104","105"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/About/About.js",["106","107","108","109","110","111"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/ResetMapView.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":8,"column":45,"nodeType":"118","messageId":"119","endLine":8,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":8,"column":61,"nodeType":"118","messageId":"122","endLine":8,"endColumn":62},{"ruleId":"120","severity":1,"message":"121","line":8,"column":67,"nodeType":"118","messageId":"122","endLine":8,"endColumn":68},{"ruleId":"123","severity":1,"message":"124","line":19,"column":12,"nodeType":"125","messageId":"126","endLine":19,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":133,"column":9,"nodeType":"129","messageId":"130","endLine":133,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":134,"column":9,"nodeType":"129","messageId":"130","endLine":134,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":40,"column":32,"nodeType":"118","messageId":"119","endLine":40,"endColumn":34},{"ruleId":"116","severity":1,"message":"117","line":96,"column":62,"nodeType":"118","messageId":"119","endLine":96,"endColumn":64},{"ruleId":"132","severity":1,"message":"133","line":29,"column":8,"nodeType":"134","endLine":29,"endColumn":10,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":45,"column":8,"nodeType":"134","endLine":45,"endColumn":41,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"136","line":40,"column":8,"nodeType":"134","endLine":40,"endColumn":83,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":3,"column":27,"nodeType":"129","messageId":"141","endLine":3,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":58,"column":36,"nodeType":"118","messageId":"119","endLine":58,"endColumn":38},{"ruleId":"139","severity":1,"message":"142","line":2,"column":16,"nodeType":"129","messageId":"141","endLine":2,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":45,"column":29,"nodeType":"145","endLine":45,"endColumn":106},{"ruleId":"143","severity":1,"message":"144","line":51,"column":33,"nodeType":"145","endLine":51,"endColumn":134},{"ruleId":"143","severity":1,"message":"144","line":56,"column":33,"nodeType":"145","endLine":56,"endColumn":134},{"ruleId":"143","severity":1,"message":"144","line":61,"column":33,"nodeType":"145","endLine":61,"endColumn":134},{"ruleId":"143","severity":1,"message":"144","line":78,"column":29,"nodeType":"145","endLine":78,"endColumn":125},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-redeclare","'date1' is already defined.","Identifier","redeclared","'date2' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.allStations'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'props.config.bikesAPI.dublinBikes.historicalUrl'. Either include it or remove the dependency array.",["149"],["150"],"no-unused-vars","'getDifferenceBetweenDates' is defined but never used.","unusedVar","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [props.allStations]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.config.bikesAPI.dublinBikes.historicalUrl, props.selectedStationData.st_ID]",{"range":"159","text":"160"},"Update the dependencies array to be: [props.formData.from, props.formData.to, props.formData.station.data.st_ID, props.config.bikesAPI.dublinBikes.historicalUrl]",{"range":"161","text":"162"},[999,1001],"[props.allStations]",[1929,1962],"[props.config.bikesAPI.dublinBikes.historicalUrl, props.selectedStationData.st_ID]",[1671,1746],"[props.formData.from, props.formData.to, props.formData.station.data.st_ID, props.config.bikesAPI.dublinBikes.historicalUrl]"]