[{"/Users/swaroop/Documents/reactApps/dublin-bikes/src/index.js":"1","/Users/swaroop/Documents/reactApps/dublin-bikes/src/BikesApp.js":"2","/Users/swaroop/Documents/reactApps/dublin-bikes/src/reportWebVitals.js":"3","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/BikesDashboard.js":"4","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/utils.js":"5","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/Context.js":"6","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Workspace.js":"7","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceIcon.js":"8","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceBrand.js":"9","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/BikeStations.js":"10","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/SearchInput.js":"11","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsTable.js":"12","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/Pagination.js":"13","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsRows.js":"14","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/CurrentStatus/BikesAvailability.js":"15","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/CurrentStatus/BikeStatus.js":"16","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Filters.js":"17"},{"size":516,"mtime":1612215539220,"results":"18","hashOfConfig":"19"},{"size":693,"mtime":1612223329897,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":3736,"mtime":1612654927665,"results":"22","hashOfConfig":"19"},{"size":3713,"mtime":1612655597698,"results":"23","hashOfConfig":"19"},{"size":162,"mtime":1612464575011,"results":"24","hashOfConfig":"19"},{"size":1233,"mtime":1612645307811,"results":"25","hashOfConfig":"19"},{"size":765,"mtime":1612489199793,"results":"26","hashOfConfig":"19"},{"size":728,"mtime":1612296848973,"results":"27","hashOfConfig":"19"},{"size":882,"mtime":1612465356556,"results":"28","hashOfConfig":"19"},{"size":955,"mtime":1612387246442,"results":"29","hashOfConfig":"19"},{"size":6297,"mtime":1612465395887,"results":"30","hashOfConfig":"19"},{"size":1709,"mtime":1612382232596,"results":"31","hashOfConfig":"19"},{"size":1268,"mtime":1612465866684,"results":"32","hashOfConfig":"19"},{"size":3444,"mtime":1612655675682,"results":"33","hashOfConfig":"19"},{"size":2163,"mtime":1612635237859,"results":"34","hashOfConfig":"19"},{"size":2733,"mtime":1612653784433,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"xtl2tk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},"/Users/swaroop/Documents/reactApps/dublin-bikes/src/index.js",[],["73","74"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/BikesApp.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/reportWebVitals.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/BikesDashboard.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/utils.js",["75","76","77","78"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/Context.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Workspace.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceIcon.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceBrand.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/BikeStations.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/SearchInput.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsTable.js",["79","80"],"import React, {Component} from 'react'\nimport Pagination from './Pagination'\nimport SearchInput from '../../BikeModel/WorkSpace/SearchInput'\nimport {FuzzyMatch} from '../utils'\nimport StationsRows from './StationsRows'\n\n\nclass StationsTable extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rowIdentifier: props.rowIdentifier || \"id\",\n            data: props.data || [],\n            itemsPerPage: props.itemsPerPage || 5,\n            columns: props.columns || [],\n            selectedData: [],\n            noOfPages: null,\n            searchFields: [\"st_NAME\"],\n            currentPage: props.currentPage || 1,\n            searchValue: props.searchValue || '',\n            _searchedRecords: props.data || []\n        }\n    }\n\n    getCurrentDataGivenPageNumber(pageNo, data=null) {\n        /*\n            Min page = 1\n            Max page = noOfPages\n        */\n        if (data == null) {\n            return this.state._searchedRecords.slice((pageNo-1)*this.state.itemsPerPage, pageNo*this.state.itemsPerPage)\n        } else {\n            return data.slice((pageNo-1)*this.state.itemsPerPage, pageNo*this.state.itemsPerPage)\n        }\n    }\n\n    search(searchValue) {\n        searchValue = searchValue.trim()\n        if (searchValue.length == 0){\n            return this.state.data\n        }\n        const data = []\n        this.state.data.map(item => {\n            let isMatch = () => {\n                for (let idx=0; idx < this.state.searchFields.length; idx++) {\n                    if (FuzzyMatch(item[this.state.searchFields[idx]], searchValue)) {\n                        return true\n                    }\n                }\n                return false\n            }\n            if (isMatch()) {\n                data.push(item)\n            }\n            return null\n        })\n\n        return data\n    }\n\n    setPaginationResults(val, reset=false) {\n        if (!reset) {\n            this.setState(prevState => {\n                return {\n                    currentPage: prevState.currentPage + val, \n                    selectedData: this.getCurrentDataGivenPageNumber(prevState.currentPage + val)\n                }\n            })\n        } else {\n            this.setState(prevState => {\n                return {\n                    currentPage: val, \n                    selectedData: this.getCurrentDataGivenPageNumber(val)\n                }\n            })\n        }\n    }\n\n    calculateNumberOfPages(totalRecordsCnt) {\n\n        var noOfPages = 1\n        if (totalRecordsCnt <= this.state.itemsPerPage) {\n            noOfPages = 1\n        } else {\n            const minPages = Math.floor(totalRecordsCnt/this.state.itemsPerPage)\n            noOfPages = (totalRecordsCnt/this.state.itemsPerPage) > minPages ? minPages+1 : minPages\n        }\n        return noOfPages\n    }\n\n    componentDidMount() {\n        /*\n        Populate the sate from props\n        */\n        if ((!this.state.data.length) || (this.state.columns == 0)){\n            throw new Error(\"Tbale is initialised without data or column information\")\n        }\n\n        this.setState(prevState => {\n            var _searchedRecords = this.search(prevState.searchValue)\n            var noOfPages = this.calculateNumberOfPages(_searchedRecords.length)\n            return {\n                selectedData: this.getCurrentDataGivenPageNumber(prevState.currentPage, _searchedRecords),\n                _searchedRecords: _searchedRecords,\n                noOfPages: noOfPages\n            }\n        })\n\n\n    }\n\n    searchHandler = (e) => {\n        const searchValue = e.target.value\n        const _searchedRecords = this.search(searchValue)\n        const noOfPages = this.calculateNumberOfPages(_searchedRecords.length)\n        this.setState(prevState => {\n            return {\n                searchValue: searchValue,\n                selectedData: this.getCurrentDataGivenPageNumber(1, _searchedRecords),\n                _searchedRecords: _searchedRecords,\n                currentPage: 1,\n                noOfPages: noOfPages\n            }\n        })\n    }\n\n    paginationHandler = (action) => {\n        switch(action) {\n            case 'next': {\n                if ((this.state.currentPage+1) > this.state.noOfPages){ break } else { this.setPaginationResults(+1) }\n                break\n            }\n            case 'previous': {\n                if ((this.state.currentPage-1) < 1) { break } else { this.setPaginationResults(-1) }\n                break\n            }\n            case 'first': {\n                this.setPaginationResults(1, true)\n                break\n            }\n            case 'last': {\n                this.setPaginationResults(this.state.noOfPages, true)\n                break\n            }\n            default: {\n                break\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <SearchInput searchHandler={this.searchHandler} searchValue={this.state.searchValue}/>\n                <div className=\"bikes__component\">\n                    <table className=\"table table-striped table-sm table-condensed stations__table\">\n                        <thead>\n                            <tr>\n                                {\n                                    this.state.columns.map(column => {\n                                        return <th key={column.id}>{column.label}</th>\n                                    })\n                                }\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <StationsRows \n                                selectedData={this.state.selectedData} \n                                rowIdentifier={this.state.rowIdentifier} \n                                columns={this.state.columns}\n                                locationInMapEvent={this.props.locationInMapEvent}\n                            />\n                        </tbody>\n                    </table>\n                    <Pagination \n                        currentPage={this.state.currentPage} \n                        noOfPages={this.state.noOfPages} \n                        paginationHandler={this.paginationHandler}\n                    />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default StationsTable","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/Pagination.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsRows.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/CurrentStatus/BikesAvailability.js",["81"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/CurrentStatus/BikeStatus.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Filters.js",["82"],"import React, {useEffect, useState} from 'react'\nimport Select from 'react-select';\n\nfunction Filters(props) {\n    const [stations, setStations] = useState([])\n    const [selectedOption, setSelectedOption] = useState(null)\n\n    useEffect(() => {\n        var options = []\n        props.allStations.map(station => {\n            options.push({\n                value: station.st_ID,\n                label: station.st_NAME,\n                data: station\n            })\n            return null\n        })\n        setStations(options)\n    }, [])  \n      \n    const handleSelectedStation = selectedOption => {\n        setSelectedOption(selectedOption)\n      }\n    \n      \n\n    return (\n        <>\n        <h4 style={{textAlign: \"center\", marginBottom: \"0px\", marginTop: \"10px\"}}>Historical Data</h4>\n        <hr></hr>\n        <div className=\"bike__stations bikes__component\">\n            <div className=\"bikes__component\">\n                <div className=\"bikes__historical_filter\">\n                    <p>Select the station and dates to view the historical data. \n                    Please note only a max period of 3 days can be selected</p>\n                    <div>\n                        * Max allowed period is 3 days.\n                    </div>\n                    <form>\n                        <div style={{marginTop: \"15px\"}}>\n                            <label>Station: </label>\n                            <Select\n                                value={selectedOption}\n                                onChange={handleSelectedStation}\n                                options={stations}\n                                className=\"bikes_station_select\"\n                                classNamePrefix=\"bikes_station_select\"\n                                placeholder=\"Select Station\"\n                            />\n                        </div>\n                        <div style={{marginTop: \"10px\"}}>\n                            <label>From: </label>\n                            <input type=\"time\"></input>\n                            <input type=\"date\"></input>\n                        </div>\n                        <div style={{marginTop: \"10px\"}}>\n                            <label>To: </label>\n                            <input type=\"time\"></input>\n                            <input type=\"date\"></input>\n                        </div>\n                        <div style={{marginTop: \"25px\", textAlign: \"right\"}}>\n                            <button className=\"btn bikes__button\">\n                                Show Data\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Filters",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":8,"column":45,"nodeType":"89","messageId":"90","endLine":8,"endColumn":47},{"ruleId":"91","severity":1,"message":"92","line":8,"column":61,"nodeType":"89","messageId":"93","endLine":8,"endColumn":62},{"ruleId":"91","severity":1,"message":"92","line":8,"column":67,"nodeType":"89","messageId":"93","endLine":8,"endColumn":68},{"ruleId":"94","severity":1,"message":"95","line":19,"column":12,"nodeType":"96","messageId":"97","endLine":19,"endColumn":22},{"ruleId":"87","severity":1,"message":"88","line":40,"column":32,"nodeType":"89","messageId":"90","endLine":40,"endColumn":34},{"ruleId":"87","severity":1,"message":"88","line":96,"column":62,"nodeType":"89","messageId":"90","endLine":96,"endColumn":64},{"ruleId":"98","severity":1,"message":"99","line":45,"column":8,"nodeType":"100","endLine":45,"endColumn":41,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":19,"column":8,"nodeType":"100","endLine":19,"endColumn":10,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.config.bikesAPI.dublinBikes.historicalUrl'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'props.allStations'. Either include it or remove the dependency array.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [props.config.bikesAPI.dublinBikes.historicalUrl, props.selectedStationData.st_ID]",{"range":"112","text":"113"},"Update the dependencies array to be: [props.allStations]",{"range":"114","text":"115"},[1929,1962],"[props.config.bikesAPI.dublinBikes.historicalUrl, props.selectedStationData.st_ID]",[535,537],"[props.allStations]"]