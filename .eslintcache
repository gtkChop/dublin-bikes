[{"/Users/swaroop/Documents/reactApps/dublin-bikes/src/index.js":"1","/Users/swaroop/Documents/reactApps/dublin-bikes/src/BikesApp.js":"2","/Users/swaroop/Documents/reactApps/dublin-bikes/src/reportWebVitals.js":"3","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/BikesDashboard.js":"4","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/utils.js":"5","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/Context.js":"6","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Workspace.js":"7","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceIcon.js":"8","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceBrand.js":"9","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/BikeStations.js":"10","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/SearchInput.js":"11","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsTable.js":"12","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/Pagination.js":"13","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsRows.js":"14","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Filters.js":"15","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikesAvailability.js":"16","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikeStatus.js":"17","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/FiltersModel.js":"18","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/HistoricalDataGraph.js":"19"},{"size":516,"mtime":1612215539220,"results":"20","hashOfConfig":"21"},{"size":693,"mtime":1612223329897,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":4136,"mtime":1612716300883,"results":"24","hashOfConfig":"21"},{"size":4316,"mtime":1612719358097,"results":"25","hashOfConfig":"21"},{"size":162,"mtime":1612464575011,"results":"26","hashOfConfig":"21"},{"size":2076,"mtime":1612716220102,"results":"27","hashOfConfig":"21"},{"size":706,"mtime":1612704121633,"results":"28","hashOfConfig":"21"},{"size":728,"mtime":1612296848973,"results":"29","hashOfConfig":"21"},{"size":882,"mtime":1612465356556,"results":"30","hashOfConfig":"21"},{"size":955,"mtime":1612387246442,"results":"31","hashOfConfig":"21"},{"size":6297,"mtime":1612465395887,"results":"32","hashOfConfig":"21"},{"size":1709,"mtime":1612382232596,"results":"33","hashOfConfig":"21"},{"size":1268,"mtime":1612465866684,"results":"34","hashOfConfig":"21"},{"size":5678,"mtime":1612722095745,"results":"35","hashOfConfig":"21"},{"size":3444,"mtime":1612705664114,"results":"36","hashOfConfig":"21"},{"size":2163,"mtime":1612705671281,"results":"37","hashOfConfig":"21"},{"size":2918,"mtime":1612722359558,"results":"38","hashOfConfig":"21"},{"size":2286,"mtime":1612722470139,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"xtl2tk",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/swaroop/Documents/reactApps/dublin-bikes/src/index.js",[],["81","82"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/BikesApp.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/reportWebVitals.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/BikesDashboard.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/utils.js",["83","84","85","86","87","88"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/Context.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Workspace.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceIcon.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/WorkSpaceBrand.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/BikeStations.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/SearchInput.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsTable.js",["89","90"],"import React, {Component} from 'react'\nimport Pagination from './Pagination'\nimport SearchInput from '../../BikeModel/WorkSpace/SearchInput'\nimport {FuzzyMatch} from '../utils'\nimport StationsRows from './StationsRows'\n\n\nclass StationsTable extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            rowIdentifier: props.rowIdentifier || \"id\",\n            data: props.data || [],\n            itemsPerPage: props.itemsPerPage || 5,\n            columns: props.columns || [],\n            selectedData: [],\n            noOfPages: null,\n            searchFields: [\"st_NAME\"],\n            currentPage: props.currentPage || 1,\n            searchValue: props.searchValue || '',\n            _searchedRecords: props.data || []\n        }\n    }\n\n    getCurrentDataGivenPageNumber(pageNo, data=null) {\n        /*\n            Min page = 1\n            Max page = noOfPages\n        */\n        if (data == null) {\n            return this.state._searchedRecords.slice((pageNo-1)*this.state.itemsPerPage, pageNo*this.state.itemsPerPage)\n        } else {\n            return data.slice((pageNo-1)*this.state.itemsPerPage, pageNo*this.state.itemsPerPage)\n        }\n    }\n\n    search(searchValue) {\n        searchValue = searchValue.trim()\n        if (searchValue.length == 0){\n            return this.state.data\n        }\n        const data = []\n        this.state.data.map(item => {\n            let isMatch = () => {\n                for (let idx=0; idx < this.state.searchFields.length; idx++) {\n                    if (FuzzyMatch(item[this.state.searchFields[idx]], searchValue)) {\n                        return true\n                    }\n                }\n                return false\n            }\n            if (isMatch()) {\n                data.push(item)\n            }\n            return null\n        })\n\n        return data\n    }\n\n    setPaginationResults(val, reset=false) {\n        if (!reset) {\n            this.setState(prevState => {\n                return {\n                    currentPage: prevState.currentPage + val, \n                    selectedData: this.getCurrentDataGivenPageNumber(prevState.currentPage + val)\n                }\n            })\n        } else {\n            this.setState(prevState => {\n                return {\n                    currentPage: val, \n                    selectedData: this.getCurrentDataGivenPageNumber(val)\n                }\n            })\n        }\n    }\n\n    calculateNumberOfPages(totalRecordsCnt) {\n\n        var noOfPages = 1\n        if (totalRecordsCnt <= this.state.itemsPerPage) {\n            noOfPages = 1\n        } else {\n            const minPages = Math.floor(totalRecordsCnt/this.state.itemsPerPage)\n            noOfPages = (totalRecordsCnt/this.state.itemsPerPage) > minPages ? minPages+1 : minPages\n        }\n        return noOfPages\n    }\n\n    componentDidMount() {\n        /*\n        Populate the sate from props\n        */\n        if ((!this.state.data.length) || (this.state.columns == 0)){\n            throw new Error(\"Tbale is initialised without data or column information\")\n        }\n\n        this.setState(prevState => {\n            var _searchedRecords = this.search(prevState.searchValue)\n            var noOfPages = this.calculateNumberOfPages(_searchedRecords.length)\n            return {\n                selectedData: this.getCurrentDataGivenPageNumber(prevState.currentPage, _searchedRecords),\n                _searchedRecords: _searchedRecords,\n                noOfPages: noOfPages\n            }\n        })\n\n\n    }\n\n    searchHandler = (e) => {\n        const searchValue = e.target.value\n        const _searchedRecords = this.search(searchValue)\n        const noOfPages = this.calculateNumberOfPages(_searchedRecords.length)\n        this.setState(prevState => {\n            return {\n                searchValue: searchValue,\n                selectedData: this.getCurrentDataGivenPageNumber(1, _searchedRecords),\n                _searchedRecords: _searchedRecords,\n                currentPage: 1,\n                noOfPages: noOfPages\n            }\n        })\n    }\n\n    paginationHandler = (action) => {\n        switch(action) {\n            case 'next': {\n                if ((this.state.currentPage+1) > this.state.noOfPages){ break } else { this.setPaginationResults(+1) }\n                break\n            }\n            case 'previous': {\n                if ((this.state.currentPage-1) < 1) { break } else { this.setPaginationResults(-1) }\n                break\n            }\n            case 'first': {\n                this.setPaginationResults(1, true)\n                break\n            }\n            case 'last': {\n                this.setPaginationResults(this.state.noOfPages, true)\n                break\n            }\n            default: {\n                break\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <SearchInput searchHandler={this.searchHandler} searchValue={this.state.searchValue}/>\n                <div className=\"bikes__component\">\n                    <table className=\"table table-striped table-sm table-condensed stations__table\">\n                        <thead>\n                            <tr>\n                                {\n                                    this.state.columns.map(column => {\n                                        return <th key={column.id}>{column.label}</th>\n                                    })\n                                }\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <StationsRows \n                                selectedData={this.state.selectedData} \n                                rowIdentifier={this.state.rowIdentifier} \n                                columns={this.state.columns}\n                                locationInMapEvent={this.props.locationInMapEvent}\n                            />\n                        </tbody>\n                    </table>\n                    <Pagination \n                        currentPage={this.state.currentPage} \n                        noOfPages={this.state.noOfPages} \n                        paginationHandler={this.paginationHandler}\n                    />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default StationsTable","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/Pagination.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/WorkSpace/StationsRows.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeViews/WorkSpace/Filters.js",["91"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikesAvailability.js",["92"],"import React, {useState, useEffect} from 'react'\nimport fetch from 'cross-fetch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faToggleOn, faToggleOff, faTimes } from '@fortawesome/fontawesome-free-solid'\nimport {getCurrentDateDiffHours} from '../../BikeModel/utils'\nimport BikeStatus from './BikeStatus'\n\nfunction BikesAvailability(props) {\n    \n    const [bikeStatus, setBikesStatus] = useState({\"bike_status\": {}, \"errors\": {}})\n    const selectedStationData = props.selectedStationData\n\n    const [toggle, setToggle] = useState(true)\n    const toggleHandler = () => {\n        setToggle(!toggle)\n    }\n\n    useEffect(() => {\n        const endPoint = props.config.bikesAPI.dublinBikes.historicalUrl\n        const dateRange = getCurrentDateDiffHours(1)\n        const url = `${endPoint}/?dfrom=${dateRange.diffDate}&dto=${dateRange.currentDate}&station=${props.selectedStationData.st_ID}`\n        fetch(url, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n                \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            if ((data.length > 0) && (data[0].historic.length > 0)) {\n                setBikesStatus({\"bike_status\": data[0].historic.pop(), \"errors\": {}})\n            } else {\n                setBikesStatus({\"bike_status\": {}, \"errors\": {\"msg\": \"Current data is empty for a given status\"}})\n            }\n        })\n        .catch((error) => {\n            console.warn(error)\n            setBikesStatus({\"bike_status\": {}, \"errors\": {\"msg\": \"Current data is empty for a given status\"}})\n        })\n        \n    }, [props.selectedStationData.st_ID])\n\n\n    return (\n        <div className=\"bikes__station_status bikes__widget_component\">\n            <div style={{position: \"absolute\", right: \"5px\", top: \"1px\"}}>\n                <button \n                    className=\"btn btn-link bikes__link_for_darkcomponent\" \n                    style={{padding: \"0\", margin: \"0\", width: \"30px\"}}\n                    onClick={() => toggleHandler()}\n                >\n                    <FontAwesomeIcon icon={toggle?faToggleOn:faToggleOff} size=\"sm\"/>\n                </button>\n                <button \n                    className=\"btn btn-link bikes__link_for_darkcomponent\" \n                    style={{padding: \"0\", margin: \"0\", width: \"30px\"}}\n                    onClick={() => props.closeHandler()}\n                >\n                    <FontAwesomeIcon icon={faTimes} size=\"sm\"/>\n                </button>\n            </div>\n            <div className=\"bikes__widget_header\">\n                <h5 style={{marginBottom: \"0\"}}>{props.selectedStationData.st_NAME}</h5>\n                <small>ID: {props.selectedStationData.st_ID}</small>\n                <small>Address: {props.selectedStationData.st_ADDRESS}</small>\n            </div>\n          \n            <BikeStatus \n                bikeStatus={bikeStatus.bike_status} \n                errorMessage={bikeStatus.errors} \n                selectedStationData={selectedStationData}\n                toggle={toggle}\n            />\n        </div>\n    )\n}\n\nexport default BikesAvailability\n","/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/BikeStatus.js",[],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/FiltersModel.js",["93"],"/Users/swaroop/Documents/reactApps/dublin-bikes/src/lib/BikeModel/HistoricalData/HistoricalDataGraph.js",["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":45,"nodeType":"102","messageId":"103","endLine":8,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":8,"column":61,"nodeType":"102","messageId":"106","endLine":8,"endColumn":62},{"ruleId":"104","severity":1,"message":"105","line":8,"column":67,"nodeType":"102","messageId":"106","endLine":8,"endColumn":68},{"ruleId":"107","severity":1,"message":"108","line":19,"column":12,"nodeType":"109","messageId":"110","endLine":19,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":133,"column":9,"nodeType":"113","messageId":"114","endLine":133,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":134,"column":9,"nodeType":"113","messageId":"114","endLine":134,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":40,"column":32,"nodeType":"102","messageId":"103","endLine":40,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":96,"column":62,"nodeType":"102","messageId":"103","endLine":96,"endColumn":64},{"ruleId":"116","severity":1,"message":"117","line":29,"column":8,"nodeType":"118","endLine":29,"endColumn":10,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":45,"column":8,"nodeType":"118","endLine":45,"endColumn":41,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"120","line":40,"column":8,"nodeType":"118","endLine":40,"endColumn":83,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":27,"nodeType":"113","messageId":"125","endLine":3,"endColumn":52},{"ruleId":"100","severity":1,"message":"101","line":58,"column":36,"nodeType":"102","messageId":"103","endLine":58,"endColumn":38},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-redeclare","'date1' is already defined.","Identifier","redeclared","'date2' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.allStations'. Either include it or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'props.config.bikesAPI.dublinBikes.historicalUrl'. Either include it or remove the dependency array.",["129"],["130"],"no-unused-vars","'getDifferenceBetweenDates' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [props.allStations]",{"range":"137","text":"138"},"Update the dependencies array to be: [props.config.bikesAPI.dublinBikes.historicalUrl, props.selectedStationData.st_ID]",{"range":"139","text":"140"},"Update the dependencies array to be: [props.formData.from, props.formData.to, props.formData.station.data.st_ID, props.config.bikesAPI.dublinBikes.historicalUrl]",{"range":"141","text":"142"},[999,1001],"[props.allStations]",[1929,1962],"[props.config.bikesAPI.dublinBikes.historicalUrl, props.selectedStationData.st_ID]",[1671,1746],"[props.formData.from, props.formData.to, props.formData.station.data.st_ID, props.config.bikesAPI.dublinBikes.historicalUrl]"]